#!/bin/bash

# Based on the Taskfile format from https://github.com/adriancooney/Taskfile
# Please keep functions sorted alphabetically for ease of future editing.

# For the moment we are targeting 3.8
BASEPYTHON=`which python3.8 || which python3 || which python`
BASE_DIR=$(cd `dirname "$0"`; pwd)
PROJECT_NAME=`basename "$BASE_DIR"`
PYTHON="$BASE_DIR/venv/bin/python"

function bootstrap {
    setup_virtualenv
    # Create a default .env file for dev
    [ ! -e "$BASE_DIR/.env" ] && cp $BASE_DIR/example.env $BASE_DIR/.env
    # Make sure there's a var dir for tmp files.
    [ ! -d "$BASE_DIR/var" ] && mkdir -p "$BASE_DIR/var"
    $PYTHON $BASE_DIR/manage.py migrate
}

function evolve {
    $PYTHON $BASE_DIR/manage.py migrate webquills zero
    rm $BASE_DIR/webquills/core/migrations/000*.py
    $PYTHON $BASE_DIR/manage.py makemigrations
    migrate
}

function help {
    echo "$0 <task> <args>"
    echo "Tasks:"
    compgen -A function | cat -n
}

function migrate {
    $PYTHON $BASE_DIR/manage.py migrate
}

function server {
    $PYTHON $BASE_DIR/manage.py runserver
}

function setup_virtualenv() {
    # Create virtualenv and install requirements for dev
    if [ ! -d $BASE_DIR/venv ]; then
        echo "Creating virtualenv in $BASE_DIR/venv"
        $BASEPYTHON -m venv --prompt "$PROJECT_NAME" $BASE_DIR/venv
    fi
    echo "Installing pip requirements. May take a while. Grab a coffee."
    # First, let's upgrade pip so it doesn't complain when installing the rest
    $BASE_DIR/venv/bin/pip install --upgrade -q pip
    $BASE_DIR/venv/bin/pip install -r $BASE_DIR/deps/dev.pip.txt -q --log $BASE_DIR/venv/pip.log
}

function tests {
    tox -e py36-django31 $@
}

TIMEFORMAT="Task completed in %3lR"
time ${@:-server}
