# Generated by Django 4.2.11 on 2024-03-15 18:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("sites", "0002_alter_domain_unique"),
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Article",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="A short summary of the item. Plain text only, no markup allowed.",
                        max_length=255,
                        verbose_name="description",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("withheld", "Draft (withheld)"),
                            ("usable", "Publish (usable)"),
                            ("cancelled", "Unpublish (cancelled)"),
                        ],
                        default="usable",
                        help_text='Must be "usable" to appear on the site. See <a href="https://schema.org/creativeWorkStatus">Schema.org</a> for details.',
                        max_length=50,
                        verbose_name="status",
                    ),
                ),
                (
                    "custom_copyright_holder",
                    models.CharField(
                        blank=True,
                        help_text="Name to use in copyright notice as owner, e.g. 'Galactic Media LLC'. If the material is not subject to copyright, or you don't want a default copyright notice printed, leave blank and explain in the copyright notice field. ",
                        max_length=255,
                        verbose_name="copyright holder",
                    ),
                ),
                (
                    "custom_copyright_notice",
                    models.TextField(
                        blank=True,
                        help_text="A custom copyright notice to replace the default. ",
                        verbose_name="copyright notice",
                    ),
                ),
                ("date_created", models.DateTimeField(verbose_name="date created")),
                (
                    "date_modified",
                    models.DateTimeField(auto_now=True, verbose_name="date modified"),
                ),
                (
                    "date_published",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="date published"
                    ),
                ),
                (
                    "expires",
                    models.DateTimeField(
                        blank=True,
                        help_text="The date and time at which the page will no longer be available.",
                        null=True,
                        verbose_name="expires",
                    ),
                ),
                ("slug", models.SlugField(max_length=255, verbose_name="slug")),
                (
                    "body",
                    models.TextField(
                        blank=True,
                        help_text="Main content of the page",
                        verbose_name="body",
                    ),
                ),
                (
                    "base_template",
                    models.CharField(
                        blank=True,
                        help_text="Replaces the standard base.html root layout. This allows you to have a totally custom layout for a page.",
                        max_length=255,
                        verbose_name="base template",
                    ),
                ),
                (
                    "content_template",
                    models.CharField(
                        blank=True,
                        help_text="The template that renders the content body within the page layout provided by the base.html. This only affects the 'main' section of the page, the rest of the layout is inherited from base.html.",
                        max_length=255,
                        verbose_name="content body template",
                    ),
                ),
                (
                    "seo_title",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="SEO title override"
                    ),
                ),
                (
                    "seo_description",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="SEO description override",
                    ),
                ),
                (
                    "custom_icon",
                    models.CharField(
                        blank=True,
                        help_text="Name of an icon to represent the page. <a href=https://icons.getbootstrap.com/#icons target=iconlist>icon list</a>",
                        max_length=255,
                        verbose_name="custom icon",
                    ),
                ),
            ],
            options={
                "verbose_name": "article",
                "verbose_name_plural": "articles",
            },
        ),
        migrations.CreateModel(
            name="Attachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="A short summary of the item. Plain text only, no markup allowed.",
                        max_length=255,
                        verbose_name="description",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("withheld", "Draft (withheld)"),
                            ("usable", "Publish (usable)"),
                            ("cancelled", "Unpublish (cancelled)"),
                        ],
                        default="usable",
                        help_text='Must be "usable" to appear on the site. See <a href="https://schema.org/creativeWorkStatus">Schema.org</a> for details.',
                        max_length=50,
                        verbose_name="status",
                    ),
                ),
                (
                    "custom_copyright_holder",
                    models.CharField(
                        blank=True,
                        help_text="Name to use in copyright notice as owner, e.g. 'Galactic Media LLC'. If the material is not subject to copyright, or you don't want a default copyright notice printed, leave blank and explain in the copyright notice field. ",
                        max_length=255,
                        verbose_name="copyright holder",
                    ),
                ),
                (
                    "custom_copyright_notice",
                    models.TextField(
                        blank=True,
                        help_text="A custom copyright notice to replace the default. ",
                        verbose_name="copyright notice",
                    ),
                ),
                ("date_created", models.DateTimeField(verbose_name="date created")),
                (
                    "date_modified",
                    models.DateTimeField(auto_now=True, verbose_name="date modified"),
                ),
                (
                    "date_published",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="date published"
                    ),
                ),
                (
                    "expires",
                    models.DateTimeField(
                        blank=True,
                        help_text="The date and time at which the page will no longer be available.",
                        null=True,
                        verbose_name="expires",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="Optional title",
                        max_length=255,
                        verbose_name="title",
                    ),
                ),
                (
                    "mime_type",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=255,
                        verbose_name="MIME type",
                    ),
                ),
                (
                    "upload_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="when uploaded"
                    ),
                ),
                (
                    "file",
                    models.FileField(max_length=255, upload_to="", verbose_name="file"),
                ),
            ],
            options={
                "verbose_name": "attachment",
                "verbose_name_plural": "attachments",
                "get_latest_by": "date_published",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        help_text="As in a newspaper byline, a name to attribute authorship of an article, e.g. 'Edward R. Murrow' (omit the word 'by').",
                        max_length=255,
                        verbose_name="name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="A paragraph or two about the author. May include a headshot, links to the author's website, recent publications, etc. Typically displayed in article footer or sidebar. ",
                        verbose_name="about",
                    ),
                ),
                (
                    "biography",
                    models.TextField(
                        blank=True,
                        help_text="A longer biography of the author, suitable for a dedicated 'About the Author' page. ",
                        verbose_name="biography",
                    ),
                ),
                (
                    "copyright_holder",
                    models.CharField(
                        blank=True,
                        help_text="Name to use in copyright notice as owner, e.g. 'Galactic Media LLC'. If the material is not subject to copyright, or you don't want a default copyright notice printed, leave blank and explain in the copyright notice field. ",
                        max_length=255,
                        verbose_name="copyright holder",
                    ),
                ),
                (
                    "copyright_notice",
                    models.TextField(
                        blank=True,
                        help_text="A custom copyright notice to replace the default. ",
                        verbose_name="copyright notice",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="sites.site"
                    ),
                ),
            ],
            options={
                "verbose_name": "author",
                "verbose_name_plural": "authors",
            },
        ),
        migrations.CreateModel(
            name="Image",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="A short summary of the item. Plain text only, no markup allowed.",
                        max_length=255,
                        verbose_name="description",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("withheld", "Draft (withheld)"),
                            ("usable", "Publish (usable)"),
                            ("cancelled", "Unpublish (cancelled)"),
                        ],
                        default="usable",
                        help_text='Must be "usable" to appear on the site. See <a href="https://schema.org/creativeWorkStatus">Schema.org</a> for details.',
                        max_length=50,
                        verbose_name="status",
                    ),
                ),
                (
                    "custom_copyright_holder",
                    models.CharField(
                        blank=True,
                        help_text="Name to use in copyright notice as owner, e.g. 'Galactic Media LLC'. If the material is not subject to copyright, or you don't want a default copyright notice printed, leave blank and explain in the copyright notice field. ",
                        max_length=255,
                        verbose_name="copyright holder",
                    ),
                ),
                (
                    "custom_copyright_notice",
                    models.TextField(
                        blank=True,
                        help_text="A custom copyright notice to replace the default. ",
                        verbose_name="copyright notice",
                    ),
                ),
                ("date_created", models.DateTimeField(verbose_name="date created")),
                (
                    "date_modified",
                    models.DateTimeField(auto_now=True, verbose_name="date modified"),
                ),
                (
                    "date_published",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="date published"
                    ),
                ),
                (
                    "expires",
                    models.DateTimeField(
                        blank=True,
                        help_text="The date and time at which the page will no longer be available.",
                        null=True,
                        verbose_name="expires",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="Optional title",
                        max_length=255,
                        verbose_name="title",
                    ),
                ),
                (
                    "mime_type",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=255,
                        verbose_name="MIME type",
                    ),
                ),
                (
                    "upload_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="when uploaded"
                    ),
                ),
                (
                    "image_file",
                    models.ImageField(
                        height_field="height",
                        max_length=255,
                        upload_to="",
                        verbose_name="image file",
                        width_field="width",
                    ),
                ),
                ("width", models.IntegerField(blank=True, verbose_name="width")),
                ("height", models.IntegerField(blank=True, verbose_name="height")),
                (
                    "alt_text",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="alt text"
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wqcontent.author",
                        verbose_name="author",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created/uploaded the content (for internal permissions, audits).",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="sites.site",
                        verbose_name="site",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
            ],
            options={
                "verbose_name": "image",
                "verbose_name_plural": "images",
                "get_latest_by": "date_published",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SiteVar",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                ("value", models.TextField(verbose_name="value")),
                (
                    "site",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vars",
                        to="sites.site",
                        verbose_name="site",
                    ),
                ),
            ],
            options={
                "verbose_name": "site variable",
                "verbose_name_plural": "site variables",
                "base_manager_name": "objects",
            },
        ),
        migrations.CreateModel(
            name="Section",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="A short summary of the item. Plain text only, no markup allowed.",
                        max_length=255,
                        verbose_name="description",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("withheld", "Draft (withheld)"),
                            ("usable", "Publish (usable)"),
                            ("cancelled", "Unpublish (cancelled)"),
                        ],
                        default="usable",
                        help_text='Must be "usable" to appear on the site. See <a href="https://schema.org/creativeWorkStatus">Schema.org</a> for details.',
                        max_length=50,
                        verbose_name="status",
                    ),
                ),
                (
                    "custom_copyright_holder",
                    models.CharField(
                        blank=True,
                        help_text="Name to use in copyright notice as owner, e.g. 'Galactic Media LLC'. If the material is not subject to copyright, or you don't want a default copyright notice printed, leave blank and explain in the copyright notice field. ",
                        max_length=255,
                        verbose_name="copyright holder",
                    ),
                ),
                (
                    "custom_copyright_notice",
                    models.TextField(
                        blank=True,
                        help_text="A custom copyright notice to replace the default. ",
                        verbose_name="copyright notice",
                    ),
                ),
                ("date_created", models.DateTimeField(verbose_name="date created")),
                (
                    "date_modified",
                    models.DateTimeField(auto_now=True, verbose_name="date modified"),
                ),
                (
                    "date_published",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="date published"
                    ),
                ),
                (
                    "expires",
                    models.DateTimeField(
                        blank=True,
                        help_text="The date and time at which the page will no longer be available.",
                        null=True,
                        verbose_name="expires",
                    ),
                ),
                ("slug", models.SlugField(max_length=255, verbose_name="slug")),
                (
                    "body",
                    models.TextField(
                        blank=True,
                        help_text="Main content of the page",
                        verbose_name="body",
                    ),
                ),
                (
                    "base_template",
                    models.CharField(
                        blank=True,
                        help_text="Replaces the standard base.html root layout. This allows you to have a totally custom layout for a page.",
                        max_length=255,
                        verbose_name="base template",
                    ),
                ),
                (
                    "content_template",
                    models.CharField(
                        blank=True,
                        help_text="The template that renders the content body within the page layout provided by the base.html. This only affects the 'main' section of the page, the rest of the layout is inherited from base.html.",
                        max_length=255,
                        verbose_name="content body template",
                    ),
                ),
                (
                    "seo_title",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="SEO title override"
                    ),
                ),
                (
                    "seo_description",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="SEO description override",
                    ),
                ),
                (
                    "custom_icon",
                    models.CharField(
                        blank=True,
                        help_text="Name of an icon to represent the page. <a href=https://icons.getbootstrap.com/#icons target=iconlist>icon list</a>",
                        max_length=255,
                        verbose_name="custom icon",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wqcontent.author",
                        verbose_name="author",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created/uploaded the content (for internal permissions, audits).",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "share_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Image for social sharing",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wqcontent.image",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="sites.site",
                        verbose_name="site",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
            ],
            options={
                "verbose_name": "section",
                "verbose_name_plural": "sections",
                "ordering": ["-date_published"],
                "get_latest_by": "date_published",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Page",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="A short summary of the item. Plain text only, no markup allowed.",
                        max_length=255,
                        verbose_name="description",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("withheld", "Draft (withheld)"),
                            ("usable", "Publish (usable)"),
                            ("cancelled", "Unpublish (cancelled)"),
                        ],
                        default="usable",
                        help_text='Must be "usable" to appear on the site. See <a href="https://schema.org/creativeWorkStatus">Schema.org</a> for details.',
                        max_length=50,
                        verbose_name="status",
                    ),
                ),
                (
                    "custom_copyright_holder",
                    models.CharField(
                        blank=True,
                        help_text="Name to use in copyright notice as owner, e.g. 'Galactic Media LLC'. If the material is not subject to copyright, or you don't want a default copyright notice printed, leave blank and explain in the copyright notice field. ",
                        max_length=255,
                        verbose_name="copyright holder",
                    ),
                ),
                (
                    "custom_copyright_notice",
                    models.TextField(
                        blank=True,
                        help_text="A custom copyright notice to replace the default. ",
                        verbose_name="copyright notice",
                    ),
                ),
                ("date_created", models.DateTimeField(verbose_name="date created")),
                (
                    "date_modified",
                    models.DateTimeField(auto_now=True, verbose_name="date modified"),
                ),
                (
                    "date_published",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="date published"
                    ),
                ),
                (
                    "expires",
                    models.DateTimeField(
                        blank=True,
                        help_text="The date and time at which the page will no longer be available.",
                        null=True,
                        verbose_name="expires",
                    ),
                ),
                ("slug", models.SlugField(max_length=255, verbose_name="slug")),
                (
                    "body",
                    models.TextField(
                        blank=True,
                        help_text="Main content of the page",
                        verbose_name="body",
                    ),
                ),
                (
                    "base_template",
                    models.CharField(
                        blank=True,
                        help_text="Replaces the standard base.html root layout. This allows you to have a totally custom layout for a page.",
                        max_length=255,
                        verbose_name="base template",
                    ),
                ),
                (
                    "content_template",
                    models.CharField(
                        blank=True,
                        help_text="The template that renders the content body within the page layout provided by the base.html. This only affects the 'main' section of the page, the rest of the layout is inherited from base.html.",
                        max_length=255,
                        verbose_name="content body template",
                    ),
                ),
                (
                    "seo_title",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="SEO title override"
                    ),
                ),
                (
                    "seo_description",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="SEO description override",
                    ),
                ),
                (
                    "custom_icon",
                    models.CharField(
                        blank=True,
                        help_text="Name of an icon to represent the page. <a href=https://icons.getbootstrap.com/#icons target=iconlist>icon list</a>",
                        max_length=255,
                        verbose_name="custom icon",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wqcontent.author",
                        verbose_name="author",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created/uploaded the content (for internal permissions, audits).",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "share_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Image for social sharing",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wqcontent.image",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="sites.site",
                        verbose_name="site",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
            ],
            options={
                "verbose_name": "page",
                "verbose_name_plural": "pages",
                "ordering": ["-date_published"],
                "get_latest_by": "date_published",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HomePage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="title")),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="A short summary of the item. Plain text only, no markup allowed.",
                        max_length=255,
                        verbose_name="description",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("withheld", "Draft (withheld)"),
                            ("usable", "Publish (usable)"),
                            ("cancelled", "Unpublish (cancelled)"),
                        ],
                        default="usable",
                        help_text='Must be "usable" to appear on the site. See <a href="https://schema.org/creativeWorkStatus">Schema.org</a> for details.',
                        max_length=50,
                        verbose_name="status",
                    ),
                ),
                (
                    "custom_copyright_holder",
                    models.CharField(
                        blank=True,
                        help_text="Name to use in copyright notice as owner, e.g. 'Galactic Media LLC'. If the material is not subject to copyright, or you don't want a default copyright notice printed, leave blank and explain in the copyright notice field. ",
                        max_length=255,
                        verbose_name="copyright holder",
                    ),
                ),
                (
                    "custom_copyright_notice",
                    models.TextField(
                        blank=True,
                        help_text="A custom copyright notice to replace the default. ",
                        verbose_name="copyright notice",
                    ),
                ),
                ("date_created", models.DateTimeField(verbose_name="date created")),
                (
                    "date_modified",
                    models.DateTimeField(auto_now=True, verbose_name="date modified"),
                ),
                (
                    "date_published",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="date published"
                    ),
                ),
                (
                    "expires",
                    models.DateTimeField(
                        blank=True,
                        help_text="The date and time at which the page will no longer be available.",
                        null=True,
                        verbose_name="expires",
                    ),
                ),
                ("slug", models.SlugField(max_length=255, verbose_name="slug")),
                (
                    "body",
                    models.TextField(
                        blank=True,
                        help_text="Main content of the page",
                        verbose_name="body",
                    ),
                ),
                (
                    "base_template",
                    models.CharField(
                        blank=True,
                        help_text="Replaces the standard base.html root layout. This allows you to have a totally custom layout for a page.",
                        max_length=255,
                        verbose_name="base template",
                    ),
                ),
                (
                    "content_template",
                    models.CharField(
                        blank=True,
                        help_text="The template that renders the content body within the page layout provided by the base.html. This only affects the 'main' section of the page, the rest of the layout is inherited from base.html.",
                        max_length=255,
                        verbose_name="content body template",
                    ),
                ),
                (
                    "seo_title",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="SEO title override"
                    ),
                ),
                (
                    "seo_description",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="SEO description override",
                    ),
                ),
                (
                    "custom_icon",
                    models.CharField(
                        blank=True,
                        help_text="Name of an icon to represent the page. <a href=https://icons.getbootstrap.com/#icons target=iconlist>icon list</a>",
                        max_length=255,
                        verbose_name="custom icon",
                    ),
                ),
                (
                    "admin_name",
                    models.CharField(
                        help_text="Name used in the admin to distinguish from other home pages",
                        max_length=255,
                        verbose_name="admin name",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wqcontent.author",
                        verbose_name="author",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created/uploaded the content (for internal permissions, audits).",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "share_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Image for social sharing",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wqcontent.image",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="sites.site",
                        verbose_name="site",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
            ],
            options={
                "verbose_name": "home page",
                "verbose_name_plural": "home pages",
                "ordering": ["-date_published"],
                "get_latest_by": "date_published",
                "abstract": False,
            },
        ),
    ]
