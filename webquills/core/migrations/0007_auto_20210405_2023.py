# Generated by Django 3.1.7 on 2021-04-05 20:23

from django.db import migrations, models
import django.db.models.deletion
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.embeds.blocks
import wagtail.images.blocks
import webquills.core.models


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0060_fix_workflow_unique_constraint'),
        ('webquills', '0006_auto_20210403_2039'),
    ]

    operations = [
        migrations.AlterField(
            model_name='articlepage',
            name='body',
            field=wagtail.core.fields.StreamField([('tease', wagtail.core.blocks.RichTextBlock(help_text='Use tease block only ONCE, as the first block.', required=False, template='webquills/blocks/tease_block.html')), ('text', wagtail.core.blocks.RichTextBlock(required=False)), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('caption', wagtail.core.blocks.CharBlock(required=False))], required=False)), ('heading', wagtail.core.blocks.StructBlock([('heading_text', wagtail.core.blocks.CharBlock(form_classname='title', required=True)), ('size', wagtail.core.blocks.ChoiceBlock(blank=False, choices=[('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5'), ('h6', 'H6')]))], required=False)), ('block_quote', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.TextBlock()), ('citation', wagtail.core.blocks.CharBlock(blank=True, label='e.g. Mary Berry', required=False))], required=False)), ('embed', wagtail.embeds.blocks.EmbedBlock(help_text='Insert an embed URL e.g https://www.youtube.com/embed/SGJFWirQ3ks', icon='fa-s15', required=False, template='webquills/blocks/embed_block.html'))], blank=True, help_text="Article text, excluding the headline (provided by 'title')", verbose_name='article body'),
        ),
        migrations.AlterField(
            model_name='categorypage',
            name='intro',
            field=wagtail.core.fields.StreamField([('tease', wagtail.core.blocks.RichTextBlock(help_text='Use tease block only ONCE, as the first block.', required=False, template='webquills/blocks/tease_block.html')), ('text', wagtail.core.blocks.RichTextBlock(required=False)), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('caption', wagtail.core.blocks.CharBlock(required=False))], required=False)), ('heading', wagtail.core.blocks.StructBlock([('heading_text', wagtail.core.blocks.CharBlock(form_classname='title', required=True)), ('size', wagtail.core.blocks.ChoiceBlock(blank=False, choices=[('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5'), ('h6', 'H6')]))], required=False)), ('block_quote', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.TextBlock()), ('citation', wagtail.core.blocks.CharBlock(blank=True, label='e.g. Mary Berry', required=False))], required=False)), ('embed', wagtail.embeds.blocks.EmbedBlock(help_text='Insert an embed URL e.g https://www.youtube.com/embed/SGJFWirQ3ks', icon='fa-s15', required=False, template='webquills/blocks/embed_block.html'))], blank=True, verbose_name='intro'),
        ),
        migrations.AlterField(
            model_name='homepage',
            name='body',
            field=wagtail.core.fields.StreamField([('tease', wagtail.core.blocks.RichTextBlock(help_text='Use tease block only ONCE, as the first block.', required=False, template='webquills/blocks/tease_block.html')), ('text', wagtail.core.blocks.RichTextBlock(required=False)), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('caption', wagtail.core.blocks.CharBlock(required=False))], required=False)), ('heading', wagtail.core.blocks.StructBlock([('heading_text', wagtail.core.blocks.CharBlock(form_classname='title', required=True)), ('size', wagtail.core.blocks.ChoiceBlock(blank=False, choices=[('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5'), ('h6', 'H6')]))], required=False)), ('block_quote', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.TextBlock()), ('citation', wagtail.core.blocks.CharBlock(blank=True, label='e.g. Mary Berry', required=False))], required=False)), ('embed', wagtail.embeds.blocks.EmbedBlock(help_text='Insert an embed URL e.g https://www.youtube.com/embed/SGJFWirQ3ks', icon='fa-s15', required=False, template='webquills/blocks/embed_block.html'))], blank=True, verbose_name='Page body'),
        ),
        migrations.CreateModel(
            name='CallToAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_name', models.CharField(help_text='A unique name to be displayed in the admin (not visible to the public)', max_length=255, unique=True, verbose_name='admin name')),
                ('headline', models.CharField(max_length=255, verbose_name='headline')),
                ('lead', wagtail.core.fields.StreamField([('tease', wagtail.core.blocks.RichTextBlock(help_text='Use tease block only ONCE, as the first block.', required=False, template='webquills/blocks/tease_block.html')), ('text', wagtail.core.blocks.RichTextBlock(required=False)), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('caption', wagtail.core.blocks.CharBlock(required=False))], required=False)), ('heading', wagtail.core.blocks.StructBlock([('heading_text', wagtail.core.blocks.CharBlock(form_classname='title', required=True)), ('size', wagtail.core.blocks.ChoiceBlock(blank=False, choices=[('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5'), ('h6', 'H6')]))], required=False)), ('block_quote', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.TextBlock()), ('citation', wagtail.core.blocks.CharBlock(blank=True, label='e.g. Mary Berry', required=False))], required=False)), ('embed', wagtail.embeds.blocks.EmbedBlock(help_text='Insert an embed URL e.g https://www.youtube.com/embed/SGJFWirQ3ks', icon='fa-s15', required=False, template='webquills/blocks/embed_block.html'))], blank=True, help_text='Paragraph leading reader to the action', verbose_name='lead paragraph')),
                ('extra', wagtail.core.fields.StreamField([('tease', wagtail.core.blocks.RichTextBlock(help_text='Use tease block only ONCE, as the first block.', required=False, template='webquills/blocks/tease_block.html')), ('text', wagtail.core.blocks.RichTextBlock(required=False)), ('image', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('caption', wagtail.core.blocks.CharBlock(required=False))], required=False)), ('heading', wagtail.core.blocks.StructBlock([('heading_text', wagtail.core.blocks.CharBlock(form_classname='title', required=True)), ('size', wagtail.core.blocks.ChoiceBlock(blank=False, choices=[('h2', 'H2'), ('h3', 'H3'), ('h4', 'H4'), ('h5', 'H5'), ('h6', 'H6')]))], required=False)), ('block_quote', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.TextBlock()), ('citation', wagtail.core.blocks.CharBlock(blank=True, label='e.g. Mary Berry', required=False))], required=False)), ('embed', wagtail.embeds.blocks.EmbedBlock(help_text='Insert an embed URL e.g https://www.youtube.com/embed/SGJFWirQ3ks', icon='fa-s15', required=False, template='webquills/blocks/embed_block.html'))], blank=True, help_text='Extra paragraph. May contain text, but typically used to embed an image or video.', verbose_name='extra paragraph')),
                ('action_label', models.CharField(help_text='The label on the action button or link', max_length=50, verbose_name='action label')),
                ('target_url', models.URLField(blank=True, help_text='CTA will either link/submit to a landing page on site, or to an external target URL. Choose only one.', null=True, verbose_name='target URL')),
                ('custom_template', models.FilePathField(default='/Users/vince/Devel/webquills/webquills/core/templates/webquills/cta/jumbolink.html', help_text='Template used to render the CTA', max_length='255', path=webquills.core.models.get_cta_template_path, verbose_name='custom template')),
                ('landing_page', models.ForeignKey(blank=True, help_text='CTA will either link/submit to a landing page on site, or to an external target URL. Choose only one.', null=True, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.page', verbose_name='landing page')),
            ],
            options={
                'verbose_name_plural': 'calls to action',
            },
        ),
        migrations.AddField(
            model_name='homepage',
            name='cta',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='webquills.calltoaction', verbose_name='call to action'),
        ),
    ]
