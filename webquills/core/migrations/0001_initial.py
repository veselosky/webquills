# Generated by Django 3.2 on 2021-04-09 22:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers
import tinymce.models
import webquills.core.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='CallToAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_name', models.CharField(help_text='A unique name to be displayed in the admin (not visible to the public)', max_length=255, unique=True, verbose_name='admin name')),
                ('headline', models.CharField(max_length=255, verbose_name='headline')),
                ('lead', tinymce.models.HTMLField(blank=True, help_text='Paragraph leading reader to the action.', verbose_name='lead paragraph')),
                ('action_label', models.CharField(help_text='The label on the action button or link', max_length=50, verbose_name='action label')),
                ('target_url', models.URLField(blank=True, help_text='CTA will either link/submit to a landing page on site, or to an external target URL. Choose only one.', null=True, verbose_name='target URL')),
                ('custom_template', models.FilePathField(default='/Users/vince/Devel/webquills/webquills/core/templates/webquills/cta/jumbolink.html', help_text='Template used to render the CTA', max_length='255', path=webquills.core.models.get_cta_template_path, verbose_name='custom template')),
            ],
            options={
                'verbose_name_plural': 'calls to action',
            },
        ),
        migrations.CreateModel(
            name='CopyrightLicense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A short name for use in the admin', max_length=50, verbose_name='name')),
                ('copyright_license_notice', tinymce.models.HTMLField(default='All rights reserved.', help_text='Text to follow the copyright notice indicating any license', verbose_name='copyright license notice')),
                ('copyright_license_url', models.CharField(blank=True, help_text='Link to the full copyright license', max_length=255, null=True, verbose_name='copyright license URL')),
            ],
            options={
                'verbose_name': 'copyright license',
                'verbose_name_plural': 'copyright licenses',
            },
        ),
        migrations.CreateModel(
            name='SiteMeta',
            fields=[
                ('site', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='sites.site')),
                ('tagline', models.CharField(blank=True, help_text='Subtitle. A few words letting visitors know what to expect.', max_length=255, null=True, verbose_name='tagline')),
                ('copyright_holder', models.CharField(default='WebQuills', help_text='Owner of the copyright (in footer notice)', max_length=255, verbose_name='copyright holder')),
                ('copyright_license', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='webquills.copyrightlicense', verbose_name='copyright license')),
            ],
            options={
                'verbose_name': 'copyright license',
                'verbose_name_plural': 'copyright licenses',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('file', models.ImageField(height_field='height', upload_to=webquills.core.models.get_upload_to, verbose_name='file', width_field='width')),
                ('width', models.IntegerField(editable=False, verbose_name='width')),
                ('height', models.IntegerField(editable=False, verbose_name='height')),
                ('alt_text', models.CharField(blank=True, max_length=255, verbose_name='alt text')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('focal_point_x', models.PositiveIntegerField(blank=True, null=True)),
                ('focal_point_y', models.PositiveIntegerField(blank=True, null=True)),
                ('focal_point_width', models.PositiveIntegerField(blank=True, null=True)),
                ('focal_point_height', models.PositiveIntegerField(blank=True, null=True)),
                ('file_size', models.PositiveIntegerField(editable=False, null=True)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text=None, through='taggit.TaggedItem', to='taggit.Tag', verbose_name='tags')),
                ('uploaded_by_user', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='uploaded by user')),
            ],
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seo_title', models.CharField(blank=True, max_length=255, verbose_name='page title')),
                ('seo_description', models.CharField(blank=True, max_length=255, verbose_name='description')),
                ('headline', models.CharField(max_length=255, verbose_name='headline')),
                ('status', models.CharField(choices=[('withheld', 'Draft (withheld)'), ('usable', 'Publish (usable)'), ('cancelled', 'Unpublish (cancelled)')], db_index=True, default='withheld', help_text='Controls visibility (must be Published/Usable to be visible).', max_length=50, verbose_name='status')),
                ('published', models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='Publication date for copyright purposes. Also controls visibility (must be published in the past to be visible).', verbose_name='published')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='updated')),
                ('expired', models.DateTimeField(blank=True, db_index=True, help_text='Time after which the content is no longer valid. Controls visibility (expired, if set, must be in the future to be visible).', null=True, verbose_name='expired')),
                ('cta', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='webquills.calltoaction', verbose_name='call to action')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seo_title', models.CharField(blank=True, max_length=255, verbose_name='page title')),
                ('seo_description', models.CharField(blank=True, max_length=255, verbose_name='description')),
                ('headline', models.CharField(max_length=255, verbose_name='headline')),
                ('status', models.CharField(choices=[('withheld', 'Draft (withheld)'), ('usable', 'Publish (usable)'), ('cancelled', 'Unpublish (cancelled)')], db_index=True, default='withheld', help_text='Controls visibility (must be Published/Usable to be visible).', max_length=50, verbose_name='status')),
                ('published', models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='Publication date for copyright purposes. Also controls visibility (must be published in the past to be visible).', verbose_name='published')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='updated')),
                ('expired', models.DateTimeField(blank=True, db_index=True, help_text='Time after which the content is no longer valid. Controls visibility (expired, if set, must be in the future to be visible).', null=True, verbose_name='expired')),
                ('intro', tinymce.models.HTMLField(blank=True, verbose_name='intro')),
                ('featured_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='webquills.image', verbose_name='featured image')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='calltoaction',
            name='picture',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='webquills.image', verbose_name='picture'),
        ),
        migrations.CreateModel(
            name='ArticlePage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seo_title', models.CharField(blank=True, max_length=255, verbose_name='page title')),
                ('seo_description', models.CharField(blank=True, max_length=255, verbose_name='description')),
                ('headline', models.CharField(max_length=255, verbose_name='headline')),
                ('status', models.CharField(choices=[('withheld', 'Draft (withheld)'), ('usable', 'Publish (usable)'), ('cancelled', 'Unpublish (cancelled)')], db_index=True, default='withheld', help_text='Controls visibility (must be Published/Usable to be visible).', max_length=50, verbose_name='status')),
                ('published', models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='Publication date for copyright purposes. Also controls visibility (must be published in the past to be visible).', verbose_name='published')),
                ('updated_at', models.DateTimeField(blank=True, null=True, verbose_name='updated')),
                ('expired', models.DateTimeField(blank=True, db_index=True, help_text='Time after which the content is no longer valid. Controls visibility (expired, if set, must be in the future to be visible).', null=True, verbose_name='expired')),
                ('body', tinymce.models.HTMLField(blank=True, help_text="Article text, excluding the headline (provided by 'title'). ", verbose_name='article body')),
                ('featured_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='webquills.image', verbose_name='featured image')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
